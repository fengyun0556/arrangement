<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.PersonUserMapper">
  <resultMap id="BaseResultMap" type="com.pojo.PersonUser">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="eMail" jdbcType="VARCHAR" property="email" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="department_id" jdbcType="TINYINT" property="departmentId" />
    <result column="employee_type_id" jdbcType="TINYINT" property="employeeTypeId" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, login_name, user_password, user_name, sex, birthday, eMail, mobile_phone, 
    department_id, employee_type_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from person_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from person_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.PersonUser">
    insert into person_user (user_id, login_name, user_password, 
      user_name, sex, birthday, 
      eMail, mobile_phone, department_id, 
      employee_type_id)
    values (#{userId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthday,jdbcType=DATE}, 
      #{email,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, #{departmentId,jdbcType=TINYINT}, 
      #{employeeTypeId,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.PersonUser">
    insert into person_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="email != null">
        eMail,
      </if>
      <if test="mobilePhone != null">
        mobile_phone,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="employeeTypeId != null">
        employee_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=TINYINT},
      </if>
      <if test="employeeTypeId != null">
        #{employeeTypeId,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.PersonUser">
    update person_user
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="email != null">
        eMail = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=TINYINT},
      </if>
      <if test="employeeTypeId != null">
        employee_type_id = #{employeeTypeId,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.PersonUser">
    update person_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      eMail = #{email,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=TINYINT},
      employee_type_id = #{employeeTypeId,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>